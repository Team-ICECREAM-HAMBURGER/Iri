<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ddc2bca3-3552-44fb-9935-884ccdc772c1" name="Changes" comment="검문보고서 아이템에 도장을 찍는 기능 구현 중&#10;&#10;1. 진행사항&#10;- 휴대식 검문 전산기에 연결한 ItemInspectionReportController.cs은 UnityEvent를 가지고 있다.&#10;- 검문 보고서 서류 오브젝트에는 ItemInspectionReportController.cs 스크립트 컴포넌트를 지니고 있다.&#10;-- ItemInspectionReportController.cs는 자신이 가지고 있는 OnPaperStampOk(), OnPaperStampNo() 메서드를 UnityEvent 리스너로 연결한다.&#10;--- 검문 통과는 OnPaperStampOk() 메서드를 사용한다.&#10;--- 검문 불통은 OnPaperStampNo() 메서드를 사용한다.&#10;- 버튼의 OnClick() 이벤트는 MobileConsoleStampController.cs의 OnStampOk(), OnStampNo()를 호출한다.&#10;-- 이 두 메서드는 UnityEvent를 Invoke.&#10;&#10;///&#10;&#10;2. 문제점&#10;- 검문보고서를 휴대식 검문 전산기 아래에 놓고 도장을 찍으면, 아래로 밀려 나오는 애니메이션을 적용하고자 했으나, 검문보고서를 제대로 놓았음을 인식할 수 있는 방법을 찾지 못함.&#10;-- OnDrop() 메서드로 Snap 방식으로 구현하고 싶었으나, 마우스 포인터 위치를 기준으로 인식하기 때문에 곤란한 상황.&#10;&#10;///&#10;&#10;3. 중요사항&#10;- 검문보고서는 존재하지 않을수도 있기 때문에, 참조 대신 이벤트로 연결하며 MobileConsoleStampController.cs에서는 이벤트 호출만 처리.&#10;- 도장 찍히는 작업 자체는 검문보고서 오브젝트에 연결되어 있는 ItemInspectionReportController.cs에서 처리한다.">
      <change afterPath="$PROJECT_DIR$/Assets/Animations/Inspection Report Snap Animator Controller.controller" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Assets/Animations/Inspection Report Snap Animator Controller.controller.meta" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Assets/Scripts/GameController/GameControlDragDropSnapController.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Assets/Scripts/GameController/GameControlDragDropSnapController.cs.meta" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Assets/Scripts/ItemInspectionReportController.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Assets/Scripts/ItemInspectionReportController.cs.meta" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Assets/Scripts/MobileConsoleStampController.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Assets/Scripts/MobileConsoleStampController.cs.meta" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.Iri/.idea/projectSettingsUpdater.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.Iri/.idea/projectSettingsUpdater.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.Iri/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.Iri/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Animations/Mobile Console Expand Level 1.anim" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Animations/Mobile Console Expand Level 1.anim" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scenes/02-Iri_Station.unity" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scenes/02-Iri_Station.unity" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/GameController/GameControlDragDropController.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/GameController/GameControlDragDropController.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/TrafficStatusTrigger.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/TrafficStatusTrigger.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ProjectSettings/TagManager.asset" beforeDir="false" afterPath="$PROJECT_DIR$/ProjectSettings/TagManager.asset" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;Seung-Ki-Kim&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/Team-ICECREAM-HAMBURGER/Iri.git&quot;,
    &quot;accountId&quot;: &quot;2a757629-010b-4f77-8af9-213fd08b870e&quot;
  }
}</component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/../Crashy-Road_2023/Assets/Scripts/EnemyVehicleController.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/../Crashy-Road_2023/Assets/Scripts/PlayerVehicleController.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock://D:/Github/Team ICECREAM HAMBURGER/Iri/Assets/Scenes/02-Iri_Station.unity" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/Library/PackageCache/com.unity.inputsystem/InputSystem/Actions/InputActionMap.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/Library/PackageCache/com.unity.inputsystem/InputSystem/Plugins/PlayerInput/DefaultInputActions.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/Library/PackageCache/com.unity.inputsystem/InputSystem/Plugins/UI/InputSystemUIInputModule.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/Library/PackageCache/com.unity.render-pipelines.universal/Runtime/Data/UniversalRenderPipelineAsset.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/../Survival-Scenario_2023/Assets/Resource/SerializableDictionary/Editor/SerializableDictionaryPropertyDrawer.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/../Survival-Scenario_2023/Assets/Resource/SerializableDictionary/SerializableDictionary.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/../Survival-Scenario_2023/Assets/Script/GameControl/GameControlDictionary.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/../Survival-Scenario_2023/Assets/Script/Player/PlayerBehaviour/PlayerBehaviour.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/../Survival-Scenario_2023/Assets/Script/Player/PlayerBehaviour/PlayerBehaviourManager.cs" root0="SKIP_HIGHLIGHTING" />
  </component>
  <component name="MetaFilesCheckinStateConfiguration" checkMetaFiles="true" />
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2imXbryDbprJq8gt4JXUn2An93p" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "Investigation-Board-Implementation",
    "ignore.virus.scanning.warn.message": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.environmentSetup",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Attach to Unity Editor.Attach to Unity Editor">
    <configuration name="Start Unity" type="RunUnityExe" factoryName="Unity Executable">
      <option name="EXE_PATH" value="C:\Program Files\Unity\Hub\Editor\6000.0.23f1\Editor\Unity.exe" />
      <option name="PROGRAM_PARAMETERS" value="-projectPath &quot;$PROJECT_DIR$&quot; -debugCodeOptimization" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="PASS_PARENT_ENVS" value="1" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <method v="2" />
    </configuration>
    <configuration name="Unit Tests (batch mode)" type="RunUnityExe" factoryName="Unity Executable">
      <option name="EXE_PATH" value="C:\Program Files\Unity\Hub\Editor\6000.0.23f1\Editor\Unity.exe" />
      <option name="PROGRAM_PARAMETERS" value="-runTests -batchmode -projectPath &quot;$PROJECT_DIR$&quot; -testResults Logs/results.xml -testPlatform EditMode -debugCodeOptimization" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="PASS_PARENT_ENVS" value="1" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <method v="2" />
    </configuration>
    <configuration name="Attach to Unity Editor &amp; Play" type="UNITY_DEBUG_RUN_CONFIGURATION" factoryName="UNITY_ATTACH_AND_PLAY" show_console_on_std_err="false" show_console_on_std_out="false" port="50000" address="localhost">
      <option name="allowRunningInParallel" value="false" />
      <option name="listenPortForConnections" value="false" />
      <option name="pid" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <method v="2" />
    </configuration>
    <configuration name="Attach to Unity Editor" type="UNITY_DEBUG_RUN_CONFIGURATION" factoryName="Unity Debug" show_console_on_std_err="false" show_console_on_std_out="false" port="50000" address="localhost">
      <option name="allowRunningInParallel" value="false" />
      <option name="listenPortForConnections" value="false" />
      <option name="pid" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ddc2bca3-3552-44fb-9935-884ccdc772c1" name="Changes" comment="" />
      <created>1720096802208</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1720096802208</updated>
      <workItem from="1720096803865" duration="3000" />
      <workItem from="1720257153500" duration="598000" />
      <workItem from="1729389791616" duration="2000" />
      <workItem from="1729400632098" duration="1452000" />
      <workItem from="1729404795436" duration="7741000" />
      <workItem from="1729513502123" duration="7964000" />
      <workItem from="1729594453306" duration="5026000" />
      <workItem from="1729925964375" duration="2189000" />
      <workItem from="1729928225172" duration="16203000" />
      <workItem from="1729995380698" duration="12000" />
      <workItem from="1730113331798" duration="7256000" />
      <workItem from="1730462091628" duration="12829000" />
      <workItem from="1730787930741" duration="1125000" />
      <workItem from="1731125708922" duration="13959000" />
      <workItem from="1731153714431" duration="6064000" />
      <workItem from="1731743907939" duration="12883000" />
      <workItem from="1731760514610" duration="10383000" />
      <workItem from="1733139966280" duration="10289000" />
      <workItem from="1733307746977" duration="9866000" />
    </task>
    <task id="LOCAL-00001" summary="뉴스 펼치기 기능 구현&#10;&#10;추상 클래스, GameControlPointerManager.cs&#10;확장 메뉴 펼치기 기능 구현 클래스, GameControlExpandMenuController.cs&#10;드래그&amp;드랍 기능 구현 클래스, GameControlDragDropController.cs&#10;- GameControlPointerManager.cs 추상 클래스에는 Unity.EventSystems 라이브러리가 포함되어 있으며, OnPointerDown(), OnBeginDrag(), OnDrag(), OnEndDrag() 추상 메서드가 있다.&#10;- 자식 클래스(GameControlExpandMenuController.cs, GameControlDragDropController.cs)는 추상 메서드를 구현하는 방식으로 기능을 구현한다.&#10;- 뉴스 펼치기 기능도 확장 메뉴 펼치기 기능과 동일한 방식으로 구현되므로, 스크립트를 컴포넌트로 붙여서 재활용.&#10;- 뉴스를 펼치는 방향과 확장 메뉴를 펼치는 방향이 반대이기 때문에, swipeLevel을 SerializeField로 선언하여 시작 레벨 값을 설정하도록 변경함.&#10;(대신 레벨 값이 변화할 떄는 swipeDirection이 음수일 때 -1, 양수일 때 +1로 설정)&#10;&#10;GameControlDragDropController.cs는 오브젝트를 선택하여 드래그&amp;드랍하는 기능을 구현하는 클래스.&#10;- 추후 검문 패널에서 증거물 오브젝트를 마우스로 클릭해 움직이는 기능을 구현할 때 해당 클래스를 활용한다.&#10;&#10;패널이 펼쳐지고 닫히는 애니메이션 속도를 증가시켜서 답답함을 해소하고자 함.&#10;- 지속적인 QA가 필요한 부분.&#10;- 검문 패널이 닫힐 때, 스프링처럼 튕겼다가 다시 돌아오는 애니메이션 효과를 추가하면 더 자연스러울 것 같다.">
      <option name="closed" value="true" />
      <created>1732455964936</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1732455964936</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnityCheckinConfiguration" checkUnsavedScenes="true" />
  <component name="UnityProjectConfiguration" hasMinimizedUI="true" />
  <component name="UnityProjectDiscoverer">
    <option name="hasUnityReference" value="true" />
    <option name="unityProject" value="true" />
    <option name="unityProjectFolder" value="true" />
  </component>
  <component name="UnityUnitTestConfiguration" currentTestLauncher="Both" />
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="CUSTOM_BOOLEAN_PROPERTIES">
                <map>
                  <entry key="Show.Git.Branches" value="false" />
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
    <MESSAGE value="열차 전광판 제작에 앞서 열차 상태 표시 세분화&#10;&#10;열차의 상태 표현을 이동, 접근, 정차, 대기, 통과로 세분화하였다.&#10;- 트리거를 앞/뒤에 하나씩 배치하여 트리거에 닿으면 접근/통과 상태로 변경됨.&#10;- VehicleTrainStateApproach.cs, VehicleTrainStatePass.cs가 그것.&#10;- 별개의 상태 머신을 새로 만들지 않고 기존의 VehicleTrainStateMachine.cs에 클래스를 새로 추가하는 방법으로 구현함.&#10;- TrafficType이 늘어났으며, 신호등 조작에 사용되는 Type은 MOVE, STOP, IDLE 뿐이므로 따로 수정하지 않음.&#10;&#10;이제 열차의 상태를 받아서 전광판에 표시할 텍스트를 조작하도록 하면 된다.&#10;&#10;TODO를 참고하여 이벤트를 2개(접근 트리거, 통과 트리거) 사용 중인데, 이를 1개로 합칠 수 있는지 검토해볼 것." />
    <MESSAGE value="뉴스 펼치기 기능 구현&#10;&#10;추상 클래스, GameControlPointerManager.cs&#10;확장 메뉴 펼치기 기능 구현 클래스, GameControlExpandMenuController.cs&#10;드래그&amp;드랍 기능 구현 클래스, GameControlDragDropController.cs&#10;- GameControlPointerManager.cs 추상 클래스에는 Unity.EventSystems 라이브러리가 포함되어 있으며, OnPointerDown(), OnBeginDrag(), OnDrag(), OnEndDrag() 추상 메서드가 있다.&#10;- 자식 클래스(GameControlExpandMenuController.cs, GameControlDragDropController.cs)는 추상 메서드를 구현하는 방식으로 기능을 구현한다.&#10;- 뉴스 펼치기 기능도 확장 메뉴 펼치기 기능과 동일한 방식으로 구현되므로, 스크립트를 컴포넌트로 붙여서 재활용.&#10;- 뉴스를 펼치는 방향과 확장 메뉴를 펼치는 방향이 반대이기 때문에, swipeLevel을 SerializeField로 선언하여 시작 레벨 값을 설정하도록 변경함.&#10;(대신 레벨 값이 변화할 떄는 swipeDirection이 음수일 때 -1, 양수일 때 +1로 설정)&#10;&#10;GameControlDragDropController.cs는 오브젝트를 선택하여 드래그&amp;드랍하는 기능을 구현하는 클래스.&#10;- 추후 검문 패널에서 증거물 오브젝트를 마우스로 클릭해 움직이는 기능을 구현할 때 해당 클래스를 활용한다.&#10;&#10;패널이 펼쳐지고 닫히는 애니메이션 속도를 증가시켜서 답답함을 해소하고자 함.&#10;- 지속적인 QA가 필요한 부분.&#10;- 검문 패널이 닫힐 때, 스프링처럼 튕겼다가 다시 돌아오는 애니메이션 효과를 추가하면 더 자연스러울 것 같다." />
    <MESSAGE value="검문보고서 아이템에 도장을 찍는 기능 구현 중&#10;&#10;1. 진행사항&#10;- 휴대식 검문 전산기에 연결한 ItemInspectionReportController.cs은 UnityEvent를 가지고 있다.&#10;- 검문 보고서 서류 오브젝트에는 ItemInspectionReportController.cs 스크립트 컴포넌트를 지니고 있다.&#10;-- ItemInspectionReportController.cs는 자신이 가지고 있는 OnPaperStampOk(), OnPaperStampNo() 메서드를 UnityEvent 리스너로 연결한다.&#10;--- 검문 통과는 OnPaperStampOk() 메서드를 사용한다.&#10;--- 검문 불통은 OnPaperStampNo() 메서드를 사용한다.&#10;- 버튼의 OnClick() 이벤트는 MobileConsoleStampController.cs의 OnStampOk(), OnStampNo()를 호출한다.&#10;-- 이 두 메서드는 UnityEvent를 Invoke.&#10;&#10;///&#10;&#10;2. 문제점&#10;- 검문보고서를 휴대식 검문 전산기 아래에 놓고 도장을 찍으면, 아래로 밀려 나오는 애니메이션을 적용하고자 했으나, 검문보고서를 제대로 놓았음을 인식할 수 있는 방법을 찾지 못함.&#10;-- OnDrop() 메서드로 Snap 방식으로 구현하고 싶었으나, 마우스 포인터 위치를 기준으로 인식하기 때문에 곤란한 상황.&#10;&#10;///&#10;&#10;3. 중요사항&#10;- 검문보고서는 존재하지 않을수도 있기 때문에, 참조 대신 이벤트로 연결하며 MobileConsoleStampController.cs에서는 이벤트 호출만 처리.&#10;- 도장 찍히는 작업 자체는 검문보고서 오브젝트에 연결되어 있는 ItemInspectionReportController.cs에서 처리한다." />
    <option name="LAST_COMMIT_MESSAGE" value="검문보고서 아이템에 도장을 찍는 기능 구현 중&#10;&#10;1. 진행사항&#10;- 휴대식 검문 전산기에 연결한 ItemInspectionReportController.cs은 UnityEvent를 가지고 있다.&#10;- 검문 보고서 서류 오브젝트에는 ItemInspectionReportController.cs 스크립트 컴포넌트를 지니고 있다.&#10;-- ItemInspectionReportController.cs는 자신이 가지고 있는 OnPaperStampOk(), OnPaperStampNo() 메서드를 UnityEvent 리스너로 연결한다.&#10;--- 검문 통과는 OnPaperStampOk() 메서드를 사용한다.&#10;--- 검문 불통은 OnPaperStampNo() 메서드를 사용한다.&#10;- 버튼의 OnClick() 이벤트는 MobileConsoleStampController.cs의 OnStampOk(), OnStampNo()를 호출한다.&#10;-- 이 두 메서드는 UnityEvent를 Invoke.&#10;&#10;///&#10;&#10;2. 문제점&#10;- 검문보고서를 휴대식 검문 전산기 아래에 놓고 도장을 찍으면, 아래로 밀려 나오는 애니메이션을 적용하고자 했으나, 검문보고서를 제대로 놓았음을 인식할 수 있는 방법을 찾지 못함.&#10;-- OnDrop() 메서드로 Snap 방식으로 구현하고 싶었으나, 마우스 포인터 위치를 기준으로 인식하기 때문에 곤란한 상황.&#10;&#10;///&#10;&#10;3. 중요사항&#10;- 검문보고서는 존재하지 않을수도 있기 때문에, 참조 대신 이벤트로 연결하며 MobileConsoleStampController.cs에서는 이벤트 호출만 처리.&#10;- 도장 찍히는 작업 자체는 검문보고서 오브젝트에 연결되어 있는 ItemInspectionReportController.cs에서 처리한다." />
  </component>
</project>